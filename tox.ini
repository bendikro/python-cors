# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from the root directory.
#
# To run tests locally with multiple python versions using tox, install the
# different python versions through pyenv (https://github.com/pyenv/pyenv).
# Then specify the python versions installed with pyenv in the shell before
# running the tests, e.g. like this:
# $ pyenv shell 2.7.5 3.3 3.6
# $ tox
#

[tox]
envlist = py27, py36, pep8, flake8, isort, testcoverage

[flake8]
max-line-length = 100
exclude = .tox,dist,build
ignore = E133,W504,N801,N802
# E133: Closing bracket is missing indentation
# W504: line break after binary operator
# N801: class name 'XXX' should use CapWords convention
# N802: function name 'XXX' should be lowercase
builtins = basestring

[isort]
sections=FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
known_standard_library = future_builtins
known_third_party = mock,requests
known_first_party = cors
default_section = FIRSTPARTY
order_by_type = true
line_length = 100
not_skip = __init__.py
skip = .git,.tox,build

[testenv]
commands = {envpython} setup.py test
basepython=python
norecursedirs=.tox .git dist
deps =
    pytest<5
	mock
whitelist_externals=
    py.test

[pytest]
python_functions=test_
python_files = *_tests.py
norecursedirs=.tox .git dist build *egg
pep8maxlinelength = 100

[testenv:testcoverage]
deps =
    {[testenv]deps}
    coverage<=3.7.1
commands=
    coverage run --branch  -m pytest .
    coverage report --include="cors"
    coverage html -d testcoverage

[testenv:pytest]
commands=
    py.test -v -s

[testenv:py27]
basepython=python2.7
commands=
    {[testenv:pytest]commands}

[testenv:py33]
basepython=python3.3
commands=
    {[testenv:pytest]commands}

[testenv:py36]
basepython=python3.6
commands=
    {[testenv:pytest]commands}

[testenv:py37]
basepython=python3.7
commands=
    {[testenv:pytest]commands}

[testenv:pep8]
deps =
    {[testenv]deps}
    pytest-pep8
commands=
    py.test --pep8

[testenv:flake8]
basepython=python3
whitelist_externals=
    {[testenv]whitelist_externals}
    flake8
deps =
    {[testenv]deps}
    flake8
    pep8-naming
commands=
    flake8

[testenv:flake8-complexity]
whitelist_externals=
    {[testenv:flake8]whitelist_externals}
deps =
    {[testenv:flake8]deps}
    mccabe
commands=
    flake8 --max-complexity=10

[testenv:isort]
deps =
    isort
whitelist_externals =
    isort
commands = python -c "import subprocess, sys; output = subprocess.check_output('isort -q --stdout --diff --recursive cors *.py', shell=True); print(output); sys.exit(len(output) != 0)"
